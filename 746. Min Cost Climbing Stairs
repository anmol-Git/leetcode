class Solution {
    public int minCostClimbingStairs(int[] cost) {
        int n = cost.length;
        int[] dp = new int[n + 1];

        for(int i = 2; i <= n; i++) {
            dp[i] = Math.min(cost[i - 1] + dp[i - 1] ,cost[i - 2] + dp[i - 2]);
        }    
        
        return dp[n];
    }

    int solve(int[] cost, int i, int[] dp) {
        
        if(i >= cost.length) return 0;

        int onstep = solve(cost, i + 1, dp);

        int twostep = solve(cost, i + 2, dp);

        return cost[i] + Math.min(onstep, twostep);
    }
}
