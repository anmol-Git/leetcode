class Solution {
    public int paintWalls(int[] cost, int[] time) {
        int n = cost.length;
        int[][] dp = new int[n + 1][n + 1];

        for(int [] arr: dp) Arrays.fill(arr, -1);
        
        return solve(cost, time, 0, n, dp);
    }


    int solve(int[] cost, int[] time, int ind, int remaining, int[][] dp) {
        if(remaining <= 0) return 0;

        if(ind == cost.length) return 1000000001;

        if(dp[ind][remaining] != -1) return dp[ind][remaining];

        int skip = solve(cost, time, ind + 1, remaining, dp);
        int take = cost[ind] + solve(cost, time, ind + 1, remaining - 1 - time[ind], dp);

        return dp[ind][remaining] = Math.min(skip, take);
    }
}
