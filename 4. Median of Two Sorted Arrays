class Solution {
    public double findMedianSortedArrays(int[] a, int[] b) {
            if(a.length > b.length){
               int[] temp = a;
               a = b;
               b = temp;
            }

        int tl = a.length + b.length;
        int start = 0;
        int end = a.length;

        while(start <= end) {
            
            int aleft = start + (end-start)/2;
            int bleft = (tl + 1) / 2 - aleft;

            int alm1 = (aleft == 0) ? Integer.MIN_VALUE : a[aleft-1];
            int al = (aleft == a.length) ? Integer.MAX_VALUE : a[aleft];
            int blm1 = (bleft == 0) ? Integer.MIN_VALUE : b[bleft-1];
            int bl = (bleft == b.length) ? Integer.MAX_VALUE : b[bleft];
            
            if(alm1 <= bl && blm1<= al){
                int ml = Math.max(alm1,blm1);
                int mr = Math.min(al,bl);
                
                if(tl%2 == 0){
                    return (ml+mr)/2.0;
                }else{
                    return (double)ml;
                }
            }else if(alm1 > bl){
                end = aleft-1;
            }else if(blm1>al){
                start = aleft+1;
            }
        }
        return 0;
    }
}
