class Solution {
    public boolean isSubsequence(String s, String t) {
        int n = s.length();
        int m = t.length();

        int i = 0;
        int j = 0;

        while(i < n && j < m) {

            if(s.charAt(i) == t.charAt(j)) i++;
            j++;
        }

        return i == n;
    }
}

// follow up solution 

class Solution {
    public int numMatchingSubseq(String s, String[] words) {

        HashMap<String, Integer> map = new HashMap<>();

        for(String word : words) map.put(word, map.getOrDefault(word, 0) + 1);
        
        int count = 0;
        int n = s.length();

        for(String t : map.keySet()) {
            
            int m = t.length();

            int i = 0;
            int j = 0;

            while(i < n && j < m) {

                if(s.charAt(i) == t.charAt(j)) j++;
                i++;
            }

            if(j == m) count+= map.get(t);
        }

        return count;
    }
}
